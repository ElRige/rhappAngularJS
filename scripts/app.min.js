(function () {
    const app = angular.module('rhapp', [
        'ngRoute',
        'rhapp.home',
        'rhapp.about',
        'rhapp.news',
    ]);

    app.config(function ($routeProvider, $locationProvider) {

        $locationProvider.html5Mode(true);

        $routeProvider
            .when('/home', {
                templateUrl: 'src/home/home.part.html',
                controller: 'HomeController as homeCtrl'
            })
            .when('/about', {
                templateUrl: 'src/about/about.part.html',
                controller: 'AboutController as aboutCtrl'
            })
            .when('/news', {
                template: 'Hello, news !'
            });

    });

})();
(function () {
    const app = angular.module('rhapp.about', []);
})();
(function () {
    const app = angular.module('rhapp.home', []);
})();
(function () {
    const app = angular.module('rhapp.news', []);
})();
(function () {
    const app = angular.module('rhapp.about');

    app.controller('AboutController', function () {
        let vm = this;
        vm.greetings = 'Welcome to about page';
    });
})();
(function () {
    const app = angular.module('rhapp.home');

    app.controller('HomeController', function (homeService) {
        let vm = this;
        homeService.getApplication().then(function (response) {
            vm.applications = response.data.applications;
        });
    });
})();
(function() {
   const app = angular.module('rhapp.home');

   app.factory('homeService', function($http) {

       function getApplications() {
           let config = {
               method: 'GET',
               url: '/rh-api/v1/applications'
           };

           return $http(config);
       }

       function getApplication(id) {
           let config = {
               method: 'GET',
               url: '/rh-api/v1/applications/' + id
           };

           return $http(config);
       }

       function deleteApplication(id) {
           let config = {
               method: 'DELETE',
               url: '/rh-api/v1/applications/' + id
           };

           return $http(config);
       }


       function addApplication(anApplication) {
           let config = {
               method: 'POST',
               url: '/rh-api/v1/applications',
               data: anApplication,
               headers: {
                   'Content-Type': 'application/json'
               }
           };

           return $http(config);
       }

       function updateApplication(anApplication, id) {
           let config = {
               method: 'PUT',
               url: '/rh-api/v1/applications/' + id,
               data: anApplication,
               headers: {
                   'Content-Type': 'application/json'
               }
           };

           return $http(config);
       }

       return {
           getApplications,
           getApplication,
           deleteApplication,
           addApplication,
           updateApplication
       };
   });
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJhYm91dC9hYm91dC5tb2R1bGUuanMiLCJob21lL2hvbWUubW9kdWxlLmpzIiwibmV3cy9uZXdzLm1vZHVsZS5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJob21lL2hvbWUuY29udHJvbGxlci5qcyIsImhvbWUvaG9tZS5zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDM0JBO0FBQ0E7QUFDQTtBQ0ZBO0FBQ0E7QUFDQTtBQ0ZBO0FBQ0E7QUFDQTtBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoic2NyaXB0cy9hcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnN0IGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdyaGFwcCcsIFtcclxuICAgICAgICAnbmdSb3V0ZScsXHJcbiAgICAgICAgJ3JoYXBwLmhvbWUnLFxyXG4gICAgICAgICdyaGFwcC5hYm91dCcsXHJcbiAgICAgICAgJ3JoYXBwLm5ld3MnLFxyXG4gICAgXSk7XHJcblxyXG4gICAgYXBwLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XHJcblxyXG4gICAgICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcclxuXHJcbiAgICAgICAgJHJvdXRlUHJvdmlkZXJcclxuICAgICAgICAgICAgLndoZW4oJy9ob21lJywge1xyXG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdzcmMvaG9tZS9ob21lLnBhcnQuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnSG9tZUNvbnRyb2xsZXIgYXMgaG9tZUN0cmwnXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC53aGVuKCcvYWJvdXQnLCB7XHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3NyYy9hYm91dC9hYm91dC5wYXJ0Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0Fib3V0Q29udHJvbGxlciBhcyBhYm91dEN0cmwnXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC53aGVuKCcvbmV3cycsIHtcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlOiAnSGVsbG8sIG5ld3MgISdcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgfSk7XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBhcHAgPSBhbmd1bGFyLm1vZHVsZSgncmhhcHAuYWJvdXQnLCBbXSk7XHJcbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnN0IGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdyaGFwcC5ob21lJywgW10pO1xyXG59KSgpOyIsIihmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBhcHAgPSBhbmd1bGFyLm1vZHVsZSgncmhhcHAubmV3cycsIFtdKTtcclxufSkoKTsiLCIoZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3QgYXBwID0gYW5ndWxhci5tb2R1bGUoJ3JoYXBwLmFib3V0Jyk7XHJcblxyXG4gICAgYXBwLmNvbnRyb2xsZXIoJ0Fib3V0Q29udHJvbGxlcicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsZXQgdm0gPSB0aGlzO1xyXG4gICAgICAgIHZtLmdyZWV0aW5ncyA9ICdXZWxjb21lIHRvIGFib3V0IHBhZ2UnO1xyXG4gICAgfSk7XHJcbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnN0IGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdyaGFwcC5ob21lJyk7XHJcblxyXG4gICAgYXBwLmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJywgZnVuY3Rpb24gKGhvbWVTZXJ2aWNlKSB7XHJcbiAgICAgICAgbGV0IHZtID0gdGhpcztcclxuICAgICAgICBob21lU2VydmljZS5nZXRBcHBsaWNhdGlvbigpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIHZtLmFwcGxpY2F0aW9ucyA9IHJlc3BvbnNlLmRhdGEuYXBwbGljYXRpb25zO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICBjb25zdCBhcHAgPSBhbmd1bGFyLm1vZHVsZSgncmhhcHAuaG9tZScpO1xyXG5cclxuICAgYXBwLmZhY3RvcnkoJ2hvbWVTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHApIHtcclxuXHJcbiAgICAgICBmdW5jdGlvbiBnZXRBcHBsaWNhdGlvbnMoKSB7XHJcbiAgICAgICAgICAgbGV0IGNvbmZpZyA9IHtcclxuICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICAgICAgICAgdXJsOiAnL3JoLWFwaS92MS9hcHBsaWNhdGlvbnMnXHJcbiAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgcmV0dXJuICRodHRwKGNvbmZpZyk7XHJcbiAgICAgICB9XHJcblxyXG4gICAgICAgZnVuY3Rpb24gZ2V0QXBwbGljYXRpb24oaWQpIHtcclxuICAgICAgICAgICBsZXQgY29uZmlnID0ge1xyXG4gICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgICAgICB1cmw6ICcvcmgtYXBpL3YxL2FwcGxpY2F0aW9ucy8nICsgaWRcclxuICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICByZXR1cm4gJGh0dHAoY29uZmlnKTtcclxuICAgICAgIH1cclxuXHJcbiAgICAgICBmdW5jdGlvbiBkZWxldGVBcHBsaWNhdGlvbihpZCkge1xyXG4gICAgICAgICAgIGxldCBjb25maWcgPSB7XHJcbiAgICAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgICAgICAgIHVybDogJy9yaC1hcGkvdjEvYXBwbGljYXRpb25zLycgKyBpZFxyXG4gICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgIHJldHVybiAkaHR0cChjb25maWcpO1xyXG4gICAgICAgfVxyXG5cclxuXHJcbiAgICAgICBmdW5jdGlvbiBhZGRBcHBsaWNhdGlvbihhbkFwcGxpY2F0aW9uKSB7XHJcbiAgICAgICAgICAgbGV0IGNvbmZpZyA9IHtcclxuICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgIHVybDogJy9yaC1hcGkvdjEvYXBwbGljYXRpb25zJyxcclxuICAgICAgICAgICAgICAgZGF0YTogYW5BcHBsaWNhdGlvbixcclxuICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgcmV0dXJuICRodHRwKGNvbmZpZyk7XHJcbiAgICAgICB9XHJcblxyXG4gICAgICAgZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oYW5BcHBsaWNhdGlvbiwgaWQpIHtcclxuICAgICAgICAgICBsZXQgY29uZmlnID0ge1xyXG4gICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICAgICAgICAgICB1cmw6ICcvcmgtYXBpL3YxL2FwcGxpY2F0aW9ucy8nICsgaWQsXHJcbiAgICAgICAgICAgICAgIGRhdGE6IGFuQXBwbGljYXRpb24sXHJcbiAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgIHJldHVybiAkaHR0cChjb25maWcpO1xyXG4gICAgICAgfVxyXG5cclxuICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgZ2V0QXBwbGljYXRpb25zLFxyXG4gICAgICAgICAgIGdldEFwcGxpY2F0aW9uLFxyXG4gICAgICAgICAgIGRlbGV0ZUFwcGxpY2F0aW9uLFxyXG4gICAgICAgICAgIGFkZEFwcGxpY2F0aW9uLFxyXG4gICAgICAgICAgIHVwZGF0ZUFwcGxpY2F0aW9uXHJcbiAgICAgICB9O1xyXG4gICB9KTtcclxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
