(function () {
    const app = angular.module('rhapp', [
        'ui.router',
        'rhapp.about',
        'rhapp.home',
        'rhapp.news',
        'tmh.dynamicLocale',
        'pascalprecht.translate'
    ]);

    app.config(["$stateProvider", "$urlRouterProvider", "$locationProvider", "$translateProvider", "tmhDynamicLocaleProvider", function ($stateProvider, $urlRouterProvider, $locationProvider, $translateProvider, tmhDynamicLocaleProvider) {
        $locationProvider.html5Mode(true);

        $translateProvider.preferredLanguage('pt-pt');
        $translateProvider.useStaticFilesLoader({
            prefix: 'data/languages/',
            suffix: '.json'
        });

        tmhDynamicLocaleProvider.localeLocationPattern('data/i18n/angular-locale_{{locale}}.js');
        tmhDynamicLocaleProvider.defaultLocale('fr-fr');

        $stateProvider
            .state('home', {
                url: '/home',
                templateUrl: 'src/home/home.part.html',
                controller: 'HomeController as hCtrl'
            })
            .state('homeDetail', {
                url: '/home/:id',
                templateUrl: 'src/home/detail/detail.part.html',
                controller: 'HomeDetailController as hdCtrl'
            })
            .state('homeNew', {
                url: '/home/application/',
                templateUrl: 'src/home/new/new.part.html',
                controller: 'HomeNewController as hnCtrl'
            })
            .state('homeEdit', {
                url: '/home/:id/edit',
                templateUrl: 'src/home/edit/edit.part.html',
                controller: 'HomeEditController as heCtrl'
            })
            .state('about', {
                url: '/about',
                templateUrl: 'src/about/about.part.html'
            })
            .state('news', {
                url: '/news',
                templateUrl: 'src/news/news.part.html'
            })

        $urlRouterProvider.otherwise('/home');

    }]);

    app.controller('RootCtrl', ["$scope", "$locale", "tmhDynamicLocale", "$translate", function ($scope, $locale, tmhDynamicLocale, $translate) {
        let locales = {
            current: 'pt-pt',
            availables: [{
                id: 'fr-fr',
                name: 'Français'
            },
            {
                id: 'en-gb',
                name: 'English'
            },
            {
                id: 'pt-pt',
                name: 'Português'
            }]
        };

        $scope.test = 'test';

        $scope.customLocales = locales.availables;
        $scope.changeLocales = (newLocale) => {
            tmhDynamicLocale.set(newLocale);
            $translate.use(newLocale);
        };

    }]);
})();



(function() {
    const app = angular.module('rhapp.about', []);
})();



(function() {
    const app = angular.module('rhapp.news', []);
})();



(function () {
    const app = angular.module('rhapp.home', [
        'rhapp.home.detail',
        'rhapp.home.edit',
        'rhapp.home.new',
    ]);
})();
(function () {
    const app = angular.module('rhapp.home.detail', []);
})();
(function () {
    const app = angular.module('rhapp.home.edit', []);
})();
(function () {
    const app = angular.module('rhapp.home.new', []);
})();
(function () {
    const app = angular.module('rhapp.about');

    app.controller('AboutController', function () {
        let vm = this;
        vm.greetings = 'Welcome to about page';
    });
})();
(function () {
    const app = angular.module('rhapp.home');

    app.controller('HomeController', ["$scope", "homeService", function ($scope, homeService) {
        let vm = this;
        homeService.getApplications().then(function (response) {
            vm.applications = response.data.aplicationsList;
        });

        vm.addApplication = function () {
            var application = {
                "firstname": "michel",
                "lastname": "dupont",
                "askedSalary": 2234,
                "experiences": [
                    {
                        "from": "2012-04-23T18:25:43.511Z",
                        "to": "2012-04-23T18:25:43.511Z",
                        "description": "kjsdhfk"
                    }]
            };
            homeService.addApplication(application).then(function (response) {
            });
        };

    }]);
})();



(function () {
    const app = angular.module('rhapp.home');

    app.factory('homeService', ["$http", function ($http) {

        function getApplications() {
            let config = {
                method: 'GET',
                url: '/rh-api/v1/applications'
            };

            return $http(config);
        }

        function getApplication(id) {
            let config = {
                method: 'GET',
                url: '/rh-api/v1/applications/' + id
            };

            return $http(config);
        }

        function deleteApplication(id) {
            let config = {
                method: 'DELETE',
                url: '/rh-api/v1/applications/' + id
            };

            return $http(config);
        }

        function addApplication(anApplication) {
            let config = {
                method: 'POST',
                url: '/rh-api/v1/applications',
                data: anApplication,
                headers: {
                    'Content-Type': 'application/json'
                }
            };

            return $http(config);
        }

        function updateApplication(anApplication, id) {
            let config = {
                method: 'PUT',
                url: '/rh-api/v1/applications/' + id,
                data: anApplication,
                headers: {
                    'Content-Type': 'application/json'
                }
            };

            return $http(config);
        }

        return {
            getApplications,
            getApplication,
            deleteApplication,
            addApplication,
            updateApplication
        };
    }]);
})();
(function () {
    const app = angular.module('rhapp.home.detail');

    app.controller('HomeDetailController', ["$stateParams", "homeService", function ($stateParams, homeService) {
        let vm = this;

        let id = $stateParams.id;
        if (!_.isEmpty(id)) {
            homeService.getApplication(id).then(function (response) {
                vm.anApplication = response.data.application;
            });
        }
    }]);
})();
(function () {
    const app = angular.module('rhapp.home.edit');

    app.controller('HomeEditController', ["$state", "$stateParams", "homeService", function ($state, $stateParams, homeService) {
        let vm = this;

        vm.errorWhileUpdating = false;

        // Model
        vm.application = {};

        let id = $stateParams.id;
        homeService.getApplication(id)
            .then(function (response) {
                vm.application = response.data.application;
            });

        // Méthod exposées
        vm.update = update;

        // Implémentation des méthode exposées
        function update() {
            homeService.updateApplication(vm.application, id)
                .then(function () {
                    console.log('mon id : ' + id);
                    $state.go('homeDetail({id:id})');
                })
                .catch(function (error) {
                    vm.errorWhileUpdating = true;
                });
        }
    }]);
})();
(function () {
    const app = angular.module('rhapp.home.new');

    app.controller('HomeNewController', ["$state", "homeService", function ($state, homeService) {
        let vm = this;

        vm.errorWhileAdding = false;

        // Model
        vm.application = {};

        // Méthod exposées
        vm.save = save;

        // Implémentation des méthode exposées
        function save() {
            homeService.addApplication(vm.application)
                .then(function () {
                    $state.go('home');
                })
                .catch(function (error) {
                    vm.errorWhileAdding = true;
                });
        }
    }]);
})();